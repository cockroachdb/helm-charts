{{- if .Values.operator.enabled }}
---
apiVersion: crdb.cockroachlabs.com/v1alpha1
kind: CrdbCluster
metadata:
  name: {{ template "cockroachdb.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cluster.labels" . | nindent 4 }}
    {{- with .Values.statefulset.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.operator.tlsEnabled }}
  tlsEnabled: {{ .Values.operator.tlsEnabled }}
  {{- end }}
  {{- with .Values.operator.clusterSettings }}
  clusterSettings: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.operator.regions }}
  regions: {{- toYaml . | nindent 4 }}
  {{- end }}
  features:
    - reconcile
    - reconcile-beta
  rollingRestartDelay: {{ .Values.operator.rollingRestartDelay }}
  template:
    spec:
      image: "{{ .Values.operator.image.name }}"
      certificates:
        {{- if .Values.operator.certificates.externalCertificates }}
        externalCertificates: {{- toYaml .Values.operator.certificates.externalCertificates | nindent 10 }}
        {{- else }}
        {{- if .Values.tls.certs.selfSigner.enabled }}
        externalCertificates:
          {{- /* Note: defaults should match secrets and configmaps created by the self-signer job. */}}
          caConfigMapName: {{ default (printf "%s-ca-secret-crt" (include "cockroachdb.fullname" .)) }}
          httpSecretName: {{ default (printf "%s-client-secret" (include "cockroachdb.fullname" .)) }}
          nodeClientSecretName: {{ default (printf "%s-client-secret" (include "cockroachdb.fullname" .)) }}
          nodeSecretName: {{ default (printf "%s-node-secret" (include "cockroachdb.fullname" .)) }}
          rootSqlClientSecretName: {{ default (printf "%s-client-secret" (include "cockroachdb.fullname" .)) }}
        {{- end }}
        {{- end }}
      {{- with .Values.operator.dataStore }}
      dataStore: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.walFailoverSpec }}
      walFailoverSpec: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.env }}
      env: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.operator.terminationGracePeriod }}
      terminationGracePeriod: {{ .Values.operator.terminationGracePeriod }}
      {{- end }}
      podLabels:
        app.kubernetes.io/name: {{ template "cockroachdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        {{- with .Values.operator.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      podAnnotations:
        helm.sh/restartedAt: {{ .Values.timestamp  | quote }}
        {{- with .Values.operator.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.operator.resources }}
      resourceRequirements: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.operator.rbac.serviceAccountName | default (include "cockroachdb.serviceAccount.name" .) }}
      {{- if .Values.operator.loggingConfigMapName }}
      loggingConfigMapName: { { .Values.operator.loggingConfigMapName } }
      {{- else }}
      {{- if .Values.operator.loggingConf }}
      loggingConfigMapName: {{ .Release.Name }}-logging
      {{- end }}
      {{- end }}
      {{- with .Values.operator.sideCars }}
      sideCars: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.operator.service.ports.grpc.external.port }}
      grpcPort: {{ .Values.operator.service.ports.grpc.external.port }}
      {{- end }}
      {{- if .Values.operator.service.ports.grpc.internal.port }}
      sqlPort: {{ .Values.operator.service.ports.grpc.internal.port }}
      {{- end }}
      {{- if .Values.operator.service.ports.http.port }}
      httpPort: {{ .Values.operator.service.ports.http.port }}
      {{- end }}
      {{- with .Values.operator.flags }}
      flags: {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
